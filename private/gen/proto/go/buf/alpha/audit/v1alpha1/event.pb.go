
// Copyright 2020-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        (unknown)
// source: buf/alpha/audit/v1alpha1/event.proto

package auditv1alpha1

import (
	v1alpha1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActorType is the type of actor that caused the audited event.
type ActorType int32

const (
	ActorType_ACTOR_TYPE_UNSPECIFIED ActorType = 0
	ActorType_ACTOR_TYPE_USER        ActorType = 1
	ActorType_ACTOR_TYPE_SYSTEM      ActorType = 2
)

// Enum value maps for ActorType.
var (
	ActorType_name = map[int32]string{
		0: "ACTOR_TYPE_UNSPECIFIED",
		1: "ACTOR_TYPE_USER",
		2: "ACTOR_TYPE_SYSTEM",
	}
	ActorType_value = map[string]int32{
		"ACTOR_TYPE_UNSPECIFIED": 0,
		"ACTOR_TYPE_USER":        1,
		"ACTOR_TYPE_SYSTEM":      2,
	}
)

func (x ActorType) Enum() *ActorType {
	p := new(ActorType)
	*p = x
	return p
}

func (x ActorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActorType) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_event_proto_enumTypes[0].Descriptor()
}

func (ActorType) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_event_proto_enumTypes[0]
}

func (x ActorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActorType.Descriptor instead.
func (ActorType) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_event_proto_rawDescGZIP(), []int{0}
}

// ResourceType is the type of the resource that was affected by the audited
// event.
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNSPECIFIED            ResourceType = 0
	ResourceType_RESOURCE_TYPE_USER                   ResourceType = 1
	ResourceType_RESOURCE_TYPE_ORGANIZATION           ResourceType = 2
	ResourceType_RESOURCE_TYPE_ORGANIZATION_MEMBER    ResourceType = 3
	ResourceType_RESOURCE_TYPE_ORGANIZATION_IDP_GROUP ResourceType = 9
	ResourceType_RESOURCE_TYPE_REPOSITORY             ResourceType = 4
	ResourceType_RESOURCE_TYPE_REPOSITORY_CONTRIBUTOR ResourceType = 5
	ResourceType_RESOURCE_TYPE_REPOSITORY_COMMIT      ResourceType = 6
	// Deprecated: Marked as deprecated in buf/alpha/audit/v1alpha1/event.proto.
	ResourceType_RESOURCE_TYPE_PLUGIN         ResourceType = 7
	ResourceType_RESOURCE_TYPE_CURATED_PLUGIN ResourceType = 8
	ResourceType_RESOURCE_TYPE_TOKEN          ResourceType = 10
	ResourceType_RESOURCE_TYPE_SCIM_TOKEN     ResourceType = 11
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0:  "RESOURCE_TYPE_UNSPECIFIED",
		1:  "RESOURCE_TYPE_USER",
		2:  "RESOURCE_TYPE_ORGANIZATION",
		3:  "RESOURCE_TYPE_ORGANIZATION_MEMBER",
		9:  "RESOURCE_TYPE_ORGANIZATION_IDP_GROUP",
		4:  "RESOURCE_TYPE_REPOSITORY",
		5:  "RESOURCE_TYPE_REPOSITORY_CONTRIBUTOR",
		6:  "RESOURCE_TYPE_REPOSITORY_COMMIT",
		7:  "RESOURCE_TYPE_PLUGIN",
		8:  "RESOURCE_TYPE_CURATED_PLUGIN",
		10: "RESOURCE_TYPE_TOKEN",
		11: "RESOURCE_TYPE_SCIM_TOKEN",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNSPECIFIED":            0,
		"RESOURCE_TYPE_USER":                   1,
		"RESOURCE_TYPE_ORGANIZATION":           2,
		"RESOURCE_TYPE_ORGANIZATION_MEMBER":    3,
		"RESOURCE_TYPE_ORGANIZATION_IDP_GROUP": 9,
		"RESOURCE_TYPE_REPOSITORY":             4,
		"RESOURCE_TYPE_REPOSITORY_CONTRIBUTOR": 5,
		"RESOURCE_TYPE_REPOSITORY_COMMIT":      6,
		"RESOURCE_TYPE_PLUGIN":                 7,
		"RESOURCE_TYPE_CURATED_PLUGIN":         8,
		"RESOURCE_TYPE_TOKEN":                  10,
		"RESOURCE_TYPE_SCIM_TOKEN":             11,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_event_proto_enumTypes[1].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_event_proto_enumTypes[1]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_event_proto_rawDescGZIP(), []int{1}
}

// EventType is the type of audited event.
type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED                         EventType = 0
	EventType_EVENT_TYPE_ORGANIZATION_CREATED                EventType = 1
	EventType_EVENT_TYPE_ORGANIZATION_DELETED                EventType = 2
	EventType_EVENT_TYPE_ORGANIZATION_MEMBER_ADDED           EventType = 3
	EventType_EVENT_TYPE_ORGANIZATION_MEMBER_ROLE_CHANGED    EventType = 4
	EventType_EVENT_TYPE_ORGANIZATION_MEMBER_REMOVED         EventType = 5
	EventType_EVENT_TYPE_ORGANIZATION_IDP_GROUP_ADDED        EventType = 21
	EventType_EVENT_TYPE_ORGANIZATION_IDP_GROUP_REMOVED      EventType = 22
	EventType_EVENT_TYPE_REPOSITORY_CREATED                  EventType = 6
	EventType_EVENT_TYPE_REPOSITORY_DELETED                  EventType = 7
	EventType_EVENT_TYPE_REPOSITORY_COMMIT_PUSHED            EventType = 8
	EventType_EVENT_TYPE_REPOSITORY_CONTRIBUTOR_ADDED        EventType = 9
	EventType_EVENT_TYPE_REPOSITORY_CONTRIBUTOR_ROLE_CHANGED EventType = 10
	EventType_EVENT_TYPE_REPOSITORY_CONTRIBUTOR_REMOVED      EventType = 11
	EventType_EVENT_TYPE_REPOSITORY_VISIBILITY_CHANGED       EventType = 12
	// Deprecated: Marked as deprecated in buf/alpha/audit/v1alpha1/event.proto.
	EventType_EVENT_TYPE_PLUGIN_CREATED EventType = 13
	// Deprecated: Marked as deprecated in buf/alpha/audit/v1alpha1/event.proto.
	EventType_EVENT_TYPE_PLUGIN_DELETED         EventType = 14
	EventType_EVENT_TYPE_CURATED_PLUGIN_CREATED EventType = 20
	EventType_EVENT_TYPE_USER_CREATED           EventType = 15
	EventType_EVENT_TYPE_USER_DELETED           EventType = 16
	EventType_EVENT_TYPE_USER_DEACTIVATED       EventType = 17
	EventType_EVENT_TYPE_USER_LOGGED_IN         EventType = 18
	EventType_EVENT_TYPE_USER_LOGGED_OUT        EventType = 19
	EventType_EVENT_TYPE_TOKEN_CREATED          EventType = 23
	EventType_EVENT_TYPE_TOKEN_DELETED          EventType = 24
	EventType_EVENT_TYPE_USER_REACTIVATED       EventType = 25
	EventType_EVENT_TYPE_SCIM_TOKEN_CREATED     EventType = 26
	EventType_EVENT_TYPE_SCIM_TOKEN_DELETED     EventType = 27
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EVENT_TYPE_UNSPECIFIED",
		1:  "EVENT_TYPE_ORGANIZATION_CREATED",
		2:  "EVENT_TYPE_ORGANIZATION_DELETED",
		3:  "EVENT_TYPE_ORGANIZATION_MEMBER_ADDED",
		4:  "EVENT_TYPE_ORGANIZATION_MEMBER_ROLE_CHANGED",
		5:  "EVENT_TYPE_ORGANIZATION_MEMBER_REMOVED",
		21: "EVENT_TYPE_ORGANIZATION_IDP_GROUP_ADDED",
		22: "EVENT_TYPE_ORGANIZATION_IDP_GROUP_REMOVED",
		6:  "EVENT_TYPE_REPOSITORY_CREATED",
		7:  "EVENT_TYPE_REPOSITORY_DELETED",
		8:  "EVENT_TYPE_REPOSITORY_COMMIT_PUSHED",
		9:  "EVENT_TYPE_REPOSITORY_CONTRIBUTOR_ADDED",
		10: "EVENT_TYPE_REPOSITORY_CONTRIBUTOR_ROLE_CHANGED",
		11: "EVENT_TYPE_REPOSITORY_CONTRIBUTOR_REMOVED",
		12: "EVENT_TYPE_REPOSITORY_VISIBILITY_CHANGED",
		13: "EVENT_TYPE_PLUGIN_CREATED",
		14: "EVENT_TYPE_PLUGIN_DELETED",
		20: "EVENT_TYPE_CURATED_PLUGIN_CREATED",
		15: "EVENT_TYPE_USER_CREATED",
		16: "EVENT_TYPE_USER_DELETED",
		17: "EVENT_TYPE_USER_DEACTIVATED",
		18: "EVENT_TYPE_USER_LOGGED_IN",
		19: "EVENT_TYPE_USER_LOGGED_OUT",
		23: "EVENT_TYPE_TOKEN_CREATED",
		24: "EVENT_TYPE_TOKEN_DELETED",
		25: "EVENT_TYPE_USER_REACTIVATED",
		26: "EVENT_TYPE_SCIM_TOKEN_CREATED",
		27: "EVENT_TYPE_SCIM_TOKEN_DELETED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":                         0,
		"EVENT_TYPE_ORGANIZATION_CREATED":                1,
		"EVENT_TYPE_ORGANIZATION_DELETED":                2,
		"EVENT_TYPE_ORGANIZATION_MEMBER_ADDED":           3,
		"EVENT_TYPE_ORGANIZATION_MEMBER_ROLE_CHANGED":    4,
		"EVENT_TYPE_ORGANIZATION_MEMBER_REMOVED":         5,
		"EVENT_TYPE_ORGANIZATION_IDP_GROUP_ADDED":        21,
		"EVENT_TYPE_ORGANIZATION_IDP_GROUP_REMOVED":      22,
		"EVENT_TYPE_REPOSITORY_CREATED":                  6,
		"EVENT_TYPE_REPOSITORY_DELETED":                  7,
		"EVENT_TYPE_REPOSITORY_COMMIT_PUSHED":            8,
		"EVENT_TYPE_REPOSITORY_CONTRIBUTOR_ADDED":        9,
		"EVENT_TYPE_REPOSITORY_CONTRIBUTOR_ROLE_CHANGED": 10,
		"EVENT_TYPE_REPOSITORY_CONTRIBUTOR_REMOVED":      11,
		"EVENT_TYPE_REPOSITORY_VISIBILITY_CHANGED":       12,
		"EVENT_TYPE_PLUGIN_CREATED":                      13,
		"EVENT_TYPE_PLUGIN_DELETED":                      14,
		"EVENT_TYPE_CURATED_PLUGIN_CREATED":              20,
		"EVENT_TYPE_USER_CREATED":                        15,
		"EVENT_TYPE_USER_DELETED":                        16,
		"EVENT_TYPE_USER_DEACTIVATED":                    17,
		"EVENT_TYPE_USER_LOGGED_IN":                      18,
		"EVENT_TYPE_USER_LOGGED_OUT":                     19,
		"EVENT_TYPE_TOKEN_CREATED":                       23,
		"EVENT_TYPE_TOKEN_DELETED":                       24,
		"EVENT_TYPE_USER_REACTIVATED":                    25,
		"EVENT_TYPE_SCIM_TOKEN_CREATED":                  26,
		"EVENT_TYPE_SCIM_TOKEN_DELETED":                  27,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_event_proto_enumTypes[2].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_event_proto_enumTypes[2]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_event_proto_rawDescGZIP(), []int{2}
}

// Actor is the actor who caused the audited event.
type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of actor who caused the audited event.
	Type ActorType `protobuf:"varint,1,opt,name=type,proto3,enum=buf.alpha.audit.v1alpha1.ActorType" json:"type,omitempty"`
	// Id of the actor who caused the audited event.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the actor who caused the audited event.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_event_proto_rawDescGZIP(), []int{0}
}

func (x *Actor) GetType() ActorType {
	if x != nil {
		return x.Type
	}
	return ActorType_ACTOR_TYPE_UNSPECIFIED
}

func (x *Actor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Actor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Resource is the affected resource by the audited event.
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of resource that was affected by the audited event.
	Type ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=buf.alpha.audit.v1alpha1.ResourceType" json:"type,omitempty"`
	// Id of the affected resource by the audited event.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the affected resource by the audited event.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_event_proto_rawDescGZIP(), []int{1}
}

func (x *Resource) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *Resource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// EventMetadata provides additional details about the audited event.
type EventMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UserAgent is the User-Agent header associated with the request that triggered the audited event, if any.
	UserAgent string `protobuf:"bytes,1,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	// IP is the IP address associated with the request that triggered the audited event, if any.
	Ip string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	// TraceID is the ID of the trace associated with the audited event, if any.
	TraceId string `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *EventMetadata) Reset() {
	*x = EventMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetadata) ProtoMessage() {}

func (x *EventMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetadata.ProtoReflect.Descriptor instead.
func (*EventMetadata) Descriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventMetadata) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *EventMetadata) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *EventMetadata) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

// Event is an audited action that happened in the BSR, with the information of
// what happened, when it happened, who did it, which resource was affected, and
// more contextual information on the event.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id of the audited event.
	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Type of the audited event. It specifies "what" happened.
	Type EventType `protobuf:"varint,2,opt,name=type,proto3,enum=buf.alpha.audit.v1alpha1.EventType" json:"type,omitempty"`
	// Actor of the audited event. It specifies "who" did it.
	Actor *Actor `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`
	// Resource of the audited event. It specifies "which resource" was affected.
	Resource *Resource `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	// Time of the audited event. It specifies "when" it happened.
	EventTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	// Metadata about the audited event. It specifies any additional details about the audited event.
	Metadata *EventMetadata `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Payload of the audited event. It specifies additional context on the event.
	//
	// Types that are assignable to Payload:
	//
	//	*Event_OrganizationCreated
	//	*Event_OrganizationDeleted
	//	*Event_OrganizationMemberAdded
	//	*Event_OrganizationMemberRoleChanged
	//	*Event_OrganizationMemberRemoved
	//	*Event_RepositoryCreated
	//	*Event_RepositoryDeleted
	//	*Event_RepositoryCommitPushed
	//	*Event_RepositoryContributorAdded
	//	*Event_RepositoryContributorRoleChanged
	//	*Event_RepositoryContributorRemoved
	//	*Event_RepositoryVisibilityChanged
	//	*Event_PluginCreated
	//	*Event_PluginDeleted
	//	*Event_UserCreated
	//	*Event_UserDeactivated
	//	*Event_UserDeleted
	//	*Event_UserLoggedIn
	//	*Event_UserLoggedOut
	//	*Event_CuratedPluginCreated
	//	*Event_IdpGroupAdded
	//	*Event_IdpGroupRemoved
	//	*Event_TokenCreated
	//	*Event_TokenDeleted
	//	*Event_UserReactivated
	//	*Event_ScimTokenCreated
	//	*Event_ScimTokenDeleted
	Payload isEvent_Payload `protobuf_oneof:"payload"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_buf_alpha_audit_v1alpha1_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_event_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetActor() *Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *Event) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Event) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *Event) GetMetadata() *EventMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (m *Event) GetPayload() isEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Event) GetOrganizationCreated() *PayloadOrganizationCreated {
	if x, ok := x.GetPayload().(*Event_OrganizationCreated); ok {
		return x.OrganizationCreated
	}
	return nil
}

func (x *Event) GetOrganizationDeleted() *PayloadOrganizationDeleted {
	if x, ok := x.GetPayload().(*Event_OrganizationDeleted); ok {
		return x.OrganizationDeleted
	}
	return nil
}

func (x *Event) GetOrganizationMemberAdded() *PayloadOrganizationMemberAdded {
	if x, ok := x.GetPayload().(*Event_OrganizationMemberAdded); ok {
		return x.OrganizationMemberAdded
	}
	return nil
}

func (x *Event) GetOrganizationMemberRoleChanged() *PayloadOrganizationMemberRoleChanged {
	if x, ok := x.GetPayload().(*Event_OrganizationMemberRoleChanged); ok {
		return x.OrganizationMemberRoleChanged
	}
	return nil
}

func (x *Event) GetOrganizationMemberRemoved() *PayloadOrganizationMemberRemoved {
	if x, ok := x.GetPayload().(*Event_OrganizationMemberRemoved); ok {
		return x.OrganizationMemberRemoved
	}
	return nil
}

func (x *Event) GetRepositoryCreated() *PayloadRepositoryCreated {
	if x, ok := x.GetPayload().(*Event_RepositoryCreated); ok {
		return x.RepositoryCreated
	}
	return nil
}

func (x *Event) GetRepositoryDeleted() *PayloadRepositoryDeleted {
	if x, ok := x.GetPayload().(*Event_RepositoryDeleted); ok {
		return x.RepositoryDeleted
	}
	return nil
}

func (x *Event) GetRepositoryCommitPushed() *PayloadRepositoryCommitPushed {
	if x, ok := x.GetPayload().(*Event_RepositoryCommitPushed); ok {
		return x.RepositoryCommitPushed
	}
	return nil
}

func (x *Event) GetRepositoryContributorAdded() *PayloadRepositoryContributorAdded {
	if x, ok := x.GetPayload().(*Event_RepositoryContributorAdded); ok {
		return x.RepositoryContributorAdded
	}
	return nil
}

func (x *Event) GetRepositoryContributorRoleChanged() *PayloadRepositoryContributorRoleChanged {
	if x, ok := x.GetPayload().(*Event_RepositoryContributorRoleChanged); ok {
		return x.RepositoryContributorRoleChanged
	}
	return nil
}

func (x *Event) GetRepositoryContributorRemoved() *PayloadRepositoryContributorRemoved {
	if x, ok := x.GetPayload().(*Event_RepositoryContributorRemoved); ok {
		return x.RepositoryContributorRemoved